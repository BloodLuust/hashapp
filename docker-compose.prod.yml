version: '3.9'

services:
  frontend:
    build: ./wallet-scanner-frontend
    environment:
      # Frontend API proxy (Next API routes) to call backend inside the network
      - BACKEND_INTERNAL_URL=http://backend:8000
      # Leave NEXT_PUBLIC_BACKEND_URL unset to use same-origin for WS
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-net

  backend:
    build: ./backend
    env_file:
      - ./.env
    environment:
      # Optionally enable Redis cache
      # REDIS_URL: redis://redis:6379/0
      # In case of corporate CA/mitm, you can temporarily disable TLS verify for debugging
      # ALLOW_INSECURE_TLS: "false"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-net

  # Optional: Redis cache (used if REDIS_URL is set in backend env)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - app-net

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - frontend
      - backend
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # For HTTPS in production, mount certs (uncomment below and adjust paths)
      # - ./certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      # - "443:443"  # enable when TLS is configured
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

